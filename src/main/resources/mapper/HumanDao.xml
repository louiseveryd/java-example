<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="example.framework.mybatis.dao.HumanDao" >
    <resultMap id="BaseResultMap" type="example.framework.mybatis.entity.Human">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="age" property="age" />
        <result column="address" property="address" />
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
    </resultMap>

    <select id="list"  resultMap="BaseResultMap" statementType="PREPARED" flushCache="true" useCache="false" >
        select id , name,age,address,gender,phone,email
        from Human
    </select>

    <select id="listBy" resultMap="BaseResultMap">
        select
            id , name,age,address,gender,phone,email
        from
            Human
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="name != null and name != ''">
                `name` = #{name}
            </if>
        </where>
    </select>



    <!--flushCache: false , 去掉一级缓存，
     useCache: false 这个查询不使用二级缓存 -->
<cache-ref namespace="example.framework.mybatis.dao.HumanDao"/>
     <cache eviction="org.apache.ibatis.cache.decorators.LruCache" readOnly="true" blocking="false" />
    <!-- 开启二级缓存  readOnly 设为true，标识只读缓存，不需要序列化， false是写缓存-->








    <sql id="Base_Column_List">
        id, `name`, age, address, gender, phone, email
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from Human
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from Human
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="example.framework.mybatis.entity.Human" useGeneratedKeys="true">
        insert into Human (`name`, age, address,
                           gender, phone, email
        )
        values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR},
                #{gender,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
               )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="example.framework.mybatis.entity.Human" useGeneratedKeys="true">
        insert into Human
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="example.framework.mybatis.entity.Human">
        update Human
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="example.framework.mybatis.entity.Human">
        update Human
        set `name` = #{name,jdbcType=VARCHAR},
            age = #{age,jdbcType=INTEGER},
            address = #{address,jdbcType=VARCHAR},
            gender = #{gender,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


</mapper>
